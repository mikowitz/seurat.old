name: "CI"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: "[${{matrix.otp}}/${{matrix.elixir}}] CI Tests"
    strategy:
      matrix:
        otp: [22, 23, 24]
        elixir: ["1.12.3", "1.13.0-rc.1"]
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: mix-cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}

      - name: plt-cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: |
            priv/plts
          key: plt-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}

      - name: mix local
        run: |
          mix local.rebar --force
          mix local.hex --force

      - name: mix compile
        run: |
          mix deps.get
          mix deps.compile
          mix compile
        if: steps.mix-cache.outputs.cache-hit != 'true'

      - name: mix checks
        run: |
          mix deps.unlock --check-unused
          mix format --check-formatted

      - name: mix test
        run: mix test

      - name: create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: mix dialyzer
        run: mix dialyzer --no-check

